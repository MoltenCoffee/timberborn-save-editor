{"version":3,"sources":["LoadSaveCard.tsx","Navbar.tsx","SaveContext.ts","plugins/DownloadPlugin.tsx","plugins/MapSizePlugin.tsx","allPlugins.ts","PluginIndex.tsx","PluginShow.tsx","SaveEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoadSaveCard","onSaveLoaded","useState","error","setError","onInput","useCallback","event","fileList","target","files","file","item","Error","reader","FileReader","onload","_event","data","JSON","parse","result","readAsText","className","type","name","accept","Navbar","SaveContext","createContext","undefined","DownloadPlugin","id","group","enabled","read","saveData","write","Preview","Editor","initialData","onClose","blob","useMemo","Blob","stringify","url","URL","createObjectURL","now","Date","filename","toISOString","substr","getHours","getMinutes","Singletons","CycleService","Cycle","CycleDay","href","download","onClick","MapSizePlugin","x","MapSize","Size","X","y","Y","onSubmit","setData","e","preventDefault","htmlFor","value","parseInt","allPlugins","Object","values","pluginsImport","filter","_","PluginIndex","onSelectPlugin","groupedPlugins","toPairs","groupBy","map","groupName","plugins","deepCopy","PluginShow","pluginId","find","onSubmitData","newData","SaveEditor","setPluginId","onSubmitPlugin","App","setSaveData","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e4f9c29.chunk.js","sourcesContent":["import { FormEvent, useCallback, useState } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\n\nexport function LoadSaveCard({ onSaveLoaded }: { onSaveLoaded: (save: DemoSave) => void }) {\n  const [ error, setError ] = useState<unknown>();\n\n  const onInput = useCallback((event: FormEvent<HTMLInputElement>) => {\n    try {\n      const fileList = (event.target as HTMLInputElement|null)?.files;\n      const file = fileList?.item(0);\n      if (!file) {\n        throw new Error(`Expected file to be uploaded, found none`);\n      }\n      const reader = new FileReader();\n      reader.onload = (_event) => {\n        try {\n          const data = JSON.parse(reader.result as string);\n          onSaveLoaded(data);\n        } catch (error) {\n          setError(error);\n          throw error;\n        }\n      }\n      reader.readAsText(file, \"utf-8\");\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  }, [onSaveLoaded, setError]);\n\n  return <div className=\"container my-4\">\n    <div className=\"row\">\n      <div className=\"col-md-6 offset-md-3\">\n        <label className=\"card\">\n          <div className=\"card-body\">\n            <h1 className=\"card-title\">Timberborn Save Editor</h1>\n            <div className=\"mb-3\">\n              <span className=\"form-label\">Upload your Demo save to start</span>\n              <input type=\"file\" name=\"save\" accept=\".json\" onInput={onInput} className=\"form-control\" />\n              {error\n                ? <small className=\"form-text\">{`#{error}`}</small>\n                : <small className=\"form-text\">Default directory: <code>%USERPROFILE%\\Documents\\Timberborn\\DemoSaves\\</code></small>}\n            </div>\n          </div>\n        </label>\n      </div>\n    </div>\n  </div>\n}\n","export function Navbar() {\n  return <nav className=\"navbar navbar-light bg-light\">\n    <div className=\"container\">\n      <span className=\"navbar-brand\">Timberborn Save Editor</span>\n    </div>\n  </nav>\n}\n","import { createContext } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\n\nexport const SaveContext = createContext<{ saveData: DemoSave }>(undefined as any);\n","import { useMemo } from \"react\";\nimport { DemoSave } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\n\nexport const DownloadPlugin: IEditorPlugin<DemoSave, DemoSave> = {\n  id: \"DownloadPlugin\",\n  name: \"Download\",\n  group: \"General\",\n  enabled: true,\n\n  read(saveData) {\n    return saveData;\n  },\n\n  write(saveData, data) {\n    throw new Error(`Not implemented`);\n  },\n\n  Preview({ saveData }) {\n    return null;\n  },\n\n  Editor({ initialData, onClose }) {\n    const blob = useMemo(() => new Blob([JSON.stringify(initialData, null, 2)], {type: 'application/json'}), [initialData]);\n    const url = URL.createObjectURL(blob);\n\n    const now = new Date();\n    const filename = `${now.toISOString().substr(0, 10)} ${now.getHours()}h${now.getMinutes()}m, Day ${initialData.Singletons.CycleService.Cycle}-${initialData.Singletons.CycleService.CycleDay} MODDED.json`;\n\n    return <div className=\"container\">\n      <div className=\"card my-4\">\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">Download</h1>\n          <div className=\"d-flex\">\n            <a href={url} download={filename} className=\"btn btn-primary\" onClick={() => onClose()}>Download</a>\n            <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Close</button>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n","import { useState } from \"react\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\n\ninterface MapSizeParams {\n  x: number;\n  y: number;\n}\n\nexport const MapSizePlugin: IEditorPlugin<MapSizeParams, MapSizeParams> = {\n  id: \"MapSizePlugin\",\n  name: \"Map size\",\n  group: \"General\",\n  enabled: true,\n\n  read(saveData) {\n    const x = saveData.Singletons.MapSize.Size.X;\n    const y = saveData.Singletons.MapSize.Size.Y;\n    return { x, y };\n  },\n\n  write(saveData, data) {\n    saveData.Singletons.MapSize.Size.X = data.x;\n    saveData.Singletons.MapSize.Size.Y = data.y;\n    return saveData;\n  },\n\n  Preview({ saveData }) {\n    const x = saveData.Singletons.MapSize.Size.X;\n    const y = saveData.Singletons.MapSize.Size.Y;\n    return <span>\n      <strong>{x}</strong> &times; <strong>{y}</strong>\n    </span>;\n  },\n\n  Editor({ initialData, onClose, onSubmit }) {\n    const [data, setData] = useState(initialData);\n\n    return <form onSubmit={(e) => { e.preventDefault(); onSubmit(data); }}>\n      <div className=\"container\">\n        <div className=\"card my-4\">\n          <div className=\"card-body\">\n            <h1 className=\"card-title\">Map size editor</h1>\n            <p>This is just a demo editor - changing this will likely break something.</p>\n            <div className=\"mb-3\">\n              <label htmlFor=\"x\" className=\"form-label\">X</label>\n              <input id=\"x\" type=\"number\" className=\"form-control\" value={data.x} onInput={(e) => setData({ ...data, x: parseInt((e.target as HTMLInputElement).value, 10) })} />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"y\" className=\"form-label\">Y</label>\n              <input id=\"y\" type=\"number\" className=\"form-control\" value={data.y} onInput={(e) => setData({ ...data, y: parseInt((e.target as HTMLInputElement).value, 10) })} />\n            </div>\n            <div className=\"d-flex\">\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Discard changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>;\n  }\n}\n","import { IEditorPlugin } from \"./IEditorPlugin\";\nimport * as pluginsImport from \"./plugins\";\n\nexport const allPlugins: IEditorPlugin<any, any>[] = Object.values(pluginsImport)\n  .filter(_ => _ && typeof _ === \"object\");\n","import { useMemo } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { allPlugins } from \"./allPlugins\";\nimport { groupBy, toPairs } from \"lodash\";\n\nexport function PluginIndex({ saveData, onSelectPlugin }: { saveData: DemoSave, onSelectPlugin: (pluginId: string) => void }) {\n  const groupedPlugins = useMemo(() => toPairs(groupBy(allPlugins\n    .filter(_ => typeof _.enabled === \"function\" ? _.enabled(saveData) : _.enabled), \"group\")), [saveData]);\n\n  return <div className=\"container\">\n    {groupedPlugins.map(([groupName, plugins]) => <div key={groupName} className=\"my-2\">\n      <h2 className=\"ps-2\">{groupName}</h2>\n      <div className=\"list-group my-2\">\n      {plugins.map(({ id, name, Preview }) => <button type=\"button\" key={id} onClick={(e) => {e.preventDefault(); onSelectPlugin(id)}} className=\"list-group-item list-group-item-action\">\n        <div className=\"fw-bold\">{name}</div>\n        <div><Preview saveData={saveData} /></div>\n      </button>)}\n      </div>\n    </div>)}\n  </div>\n}\n","import { useCallback, useMemo } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { allPlugins } from \"./allPlugins\";\n\n/**\n * A dirty way to create a deep-copy of a save. The deep copy is usually created\n * to prevent the original copy from being edited or to force a re-render when\n * one of its deep objects might have been updated.\n * @param save\n * @returns\n */\nfunction deepCopy(saveData: DemoSave): DemoSave {\n  return JSON.parse(JSON.stringify(saveData));\n}\n\nexport function PluginShow({ saveData, pluginId, onClose, onSubmit }: { saveData: DemoSave, pluginId: string, onClose: () => void; onSubmit: (save: DemoSave) => void }) {\n  const {Editor, read, write} = useMemo(() => allPlugins.find(_ => _.id === pluginId), [pluginId])!;\n\n  const data = useMemo(() => read(deepCopy(saveData)), [read, saveData]);\n\n  const onSubmitData = useCallback((newData: unknown) => {\n    onSubmit(deepCopy(write(saveData, newData)));\n  }, [write, saveData, onSubmit]);\n\n  return <Editor initialData={data} onClose={onClose} onSubmit={onSubmitData} />;\n}\n","import { useCallback, useState } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { PluginIndex } from \"./PluginIndex\";\nimport { PluginShow } from \"./PluginShow\";\n\nexport function SaveEditor({ saveData, onSubmit }: { saveData: DemoSave, onSubmit: (saveData: DemoSave) => void }) {\n  const [pluginId, setPluginId] = useState<null|string>(null);\n\n  const onSubmitPlugin = useCallback((saveData: DemoSave) => {\n    onSubmit(saveData);\n    setPluginId(null);\n  }, [onSubmit]);\n\n  return pluginId === null\n    ? <PluginIndex saveData={saveData} onSelectPlugin={setPluginId} />\n    : <PluginShow saveData={saveData} pluginId={pluginId} onClose={() => setPluginId(null)} onSubmit={onSubmitPlugin} />\n}\n","import { useState } from 'react';\nimport './App.css';\nimport { DemoSave } from './DemoSave';\nimport { LoadSaveCard } from './LoadSaveCard';\nimport { Navbar } from './Navbar';\nimport { SaveContext } from './SaveContext';\nimport { SaveEditor } from './SaveEditor';\n\nfunction App() {\n  const [ saveData, setSaveData ] = useState<DemoSave|null>(null);\n\n  return <>\n    <Navbar />\n    {saveData === null\n      ? <LoadSaveCard onSaveLoaded={setSaveData} />\n      : <SaveContext.Provider value={{saveData}}>\n        <SaveEditor saveData={saveData} onSubmit={setSaveData} />\n      </SaveContext.Provider>}\n  </>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}